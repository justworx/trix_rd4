{
	#
	# JConfig Wrapper configuration
	#  - Config for a console.Wrapper that will wrap a JConfig object.
	#
	
	# TITLE
	"title" : "JConfig Console",
	"about" : """
		View, edit, and save JSON config files. Enter JConfig method 
		names as commands, and str, int, float, list, and/or dict 
		arguments as expected by the matching JConfig method.
		
		Don't forget to issue the `save` command if you want to save the 
		changes to the file file.	Ctrl-c without saving will leave the 
		file in its previously-saved state.
		""",
	
	# How to create the wrapper..
	"ncreate" : "app.jconfig.JConfig",
	
	
	# MESSAGES
	"messages" : {
		"requires-args" : "This command requires one or more arguments.",
		"invalid-command" : "Unknown Command - Not Handled",
		"unknown-command" : "Unknown Command - Not Handled"
	},
	
	#
	# Commands
	#  - The 'cmd' key exists so that non-english config files may
	#    replace the command word. If 'cmd' is not set, cmd defaults
	#    to the key string.
	#
	"commands" : {
	
		# open a config file.
		"open" : {
			"cmd" : "open",
			"help" : "Open a JSON (or ast-parsable) config file.",
			"eg" : "open ~/.config/myapp.conf"
		},
		
		
		"select" : {
			"cmd" : "select",
			"help" : """
				Select a key from the current selection object. This
				is basically a way to move one step into the current 
				selection's data.
				"""
		},
		
		# set a key in the selected object
		"set" : {
			"cmd" : "set",
			"help" : """
				Set the selected key's value; Args must be given in JSON
				format.
				""",
			"eg" : """
				  set MyString "A string"
				  set MyList   [1, 2, "bucklemyshoe"]
				  set MyDict   {}
				  set MyNumber 9
				"""
		},
		
		"type" : {
			"cmd" : "type",
			"help" : "Return the type of the root object."
		},
		
		"path" : {
			"cmd" : "path",
			"help" : "Return the path of this config file."
		},
		
		"keys" : {
			"cmd" : "keys",
			"help" : "Return root config object's keys."
		},
		
		"skeys" : {
			"cmd" : "skeys",
			"help" : "Return selected object's keys."
		},
		
		"show" : {
			"cmd" : "show",
			"help" : """
				Display the full contents of current selection object
				in JSON Display format.
				"""
		},
		
		"deselect" : {
			"cmd" : "deselect",
			"help" : "Set selection to the root of the config file."
		},
		
	 	# Finally, save the current file to disk as JSON
		"save" : {
			"cmd" : "save",
			"help" : "Save the current file as JSON.",
			"eg" : "open ~/.config/myapp.conf"
		},
		
		"exit" : {
			"cmd" : "exit",
			"help" : "Exit to the previous prompt.",
			"eg" : "exit"
		}
	},
	
	#
	# TECHNICAL DEFAULTS
	#
	
	# encoding values
	'encoding' : 'utf_8',
	'errors' : 'replace'

}
